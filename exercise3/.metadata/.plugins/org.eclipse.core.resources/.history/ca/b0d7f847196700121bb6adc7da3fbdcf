import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.util.Collection;

import javax.swing.JPanel;

public class DrawingArea extends JPanel {
	private Collection<DataPoint> dataPoints;
	private double minX, maxX, minY, maxY;
	
	@Override
	protected void paintComponent(Graphics graphics) {
		super.paintComponent(graphics);
		Graphics2D g = (Graphics2D)graphics;
		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
		if(dataPoints != null){
			Point currentPoint;
			for(DataPoint dataPoint : dataPoints){
				currentPoint = this.scale(dataPoint);
				g.setColor(new Color(0x0000FF));
				g.fillOval(currentPoint.x, currentPoint.y, 6, 6);
				g.setColor(new Color(0xFF0000));
				g.fillOval((int)dataPoint.getX(), (int)dataPoint.getY(), 4, 4);
			}
		}
	}
	
	public void setDataSet(DataSet dataSet){
		if(dataSet == null || dataSet.dataPoints == null || dataSet.dataPoints.isEmpty()) return;
		this.dataPoints = dataSet.getDataPoints();
		this.setMinMaxCoordinates(dataSet);
	}
	
	private void setMinMaxCoordinates(DataSet dataSet){
		minX = maxX = dataSet.getDataPoints().iterator().next().getX();
		minY = maxY = dataSet.getDataPoints().iterator().next().getY();
		
		for(DataPoint dataPoint : dataSet.getDataPoints()){
			if(dataPoint.getX() < minX){
				minX = dataPoint.getX();
			}
			if(dataPoint.getX() > maxX){
				maxX = dataPoint.getX();
			}
			if(dataPoint.getY() < minY){
				minY = dataPoint.getY();
			}
			if(dataPoint.getY() > maxY){
				maxY = dataPoint.getY();
			}
		}
	}
	
	public void paintDataSet(DataSet dataSet){
		this.setDataSet(dataSet);
		this.repaint();
	}
	
	public Point scale(DataPoint dataPoint){
		Point scaledPoint = new Point();
		scaledPoint.x = (int)(((dataPoint.getX()-this.minX) / (this.maxX - this.minX))*this.getSize().getWidth());
		scaledPoint.y = (int)(((dataPoint.getY()-this.minY) / (this.maxY - this.minY))*this.getSize().getHeight()*0.3);
		System.out.println("Scaled (" + Double.toString(dataPoint.getX()) + "," + Double.toString(dataPoint.getY()) + ") to (" + scaledPoint.x + "," + scaledPoint.y + ")");
		return scaledPoint;
	}
}
